name: Run Tests

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master, feature/*, releases/* ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run_tests:
    runs-on: macos-15
    env:
      FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pod Install
        uses: ./.github/actions/pod-install

      - name: Run Tests and Generate Code Coverage Report (.xcresult)
        run: bundle exec fastlane cru_shared_lane_run_tests testplan:Tests output_directory:fastlane_scan_output_directory result_bundle:true reset_simulator:true should_clear_derived_data:true

        - name: Run UITests and Generate Code Coverage Report (.xcresult)
        run: bundle exec fastlane cru_shared_lane_run_tests testplan:UITests output_directory:fastlane_scan_output_directory result_bundle:true reset_simulator:true should_clear_derived_data:true

      - name: Install XCResultParser
        run: brew install a7ex/homebrew-formulae/xcresultparser

      - name: Parse XCResult For CodeCov
        run: xcresultparser -o cobertura /Users/runner/work/godtools-swift/godtools-swift/fastlane_scan_output_directory/GodTools-Production.xcresult > /Users/runner/work/godtools-swift/godtools-swift/fastlane_scan_output_directory/coverage.xml

      - name: Upload Coverage XML to CodeCov
        uses: codecov/codecov-action@v5
        with:
          files: /Users/runner/work/godtools-swift/godtools-swift/fastlane_scan_output_directory/coverage.xml
          plugin: xcode
          token: ${{ secrets.CODECOV_TOKEN }}


      # - name: Upload Xcode Code Coverage Report to CodeCov
      #   uses: codecov/codecov-action@v5
      #   with:
      #     fail_ci_if_error: true
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     verbose: true
      #     xcode: true
      #     xcode_archive_path: /Users/runner/work/godtools-swift/godtools-swift/fastlane_scan_output_directory/GodTools-Production.xcresult

      - name: Archive XCode Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcode-logs
          path: "/Users/runner/Library/Developer/Xcode/DerivedData/Logs/godtools-*/**"

      - name: Archive XCode Archive Path
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fastlane-scan-output
          path: "/Users/runner/work/godtools-swift/godtools-swift/fastlane_scan_output_directory/*"